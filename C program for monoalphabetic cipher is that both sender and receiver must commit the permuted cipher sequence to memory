#include <stdio.h>
#include <string.h>
#include <ctype.h>

void generateCipherSequence(char *keyword, char *cipherSequence) {
    int keywordLength = strlen(keyword);
    char uniqueChars[26] = {'\0'};
    int uniqueCharCount = 0;

    for (int i = 0; i < keywordLength; ++i) {
        if (isalpha(keyword[i]) && !strchr(uniqueChars, toupper(keyword[i]))) {
            uniqueChars[uniqueCharCount++] = toupper(keyword[i]);
        }
    }

    for (char ch = 'A'; ch <= 'Z'; ++ch) {
        if (!strchr(uniqueChars, ch)) {
            uniqueChars[uniqueCharCount++] = ch;
        }
    }

    strcpy(cipherSequence, uniqueChars);
}

void monoalphabeticEncrypt(char *plaintext, char *cipherSequence) {
    for (int i = 0; plaintext[i] != '\0'; ++i) {
        if (isalpha(plaintext[i])) {
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            int index = plaintext[i] - base;
            plaintext[i] = cipherSequence[index];
        }
    }
}

int main() {
    char plaintext[1000];
    char keyword[100];
    char cipherSequence[26];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    strtok(plaintext, "\n"); 

    printf("Enter the keyword: ");
    fgets(keyword, sizeof(keyword), stdin);
    strtok(keyword, "\n"); 

    generateCipherSequence(keyword, cipherSequence);

    monoalphabeticEncrypt(plaintext, cipherSequence);

    printf("Encrypted message: %s\n", plaintext);

    return 0;
}
